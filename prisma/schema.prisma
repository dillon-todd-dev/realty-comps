generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  emailAddress String  @unique @map("email_address")
  firstName    String? @map("first_name")
  lastName     String? @map("last_name")
  imageUrl     String? @map("image_url")

  properties Property[]

  @@map("users")
}

model Property {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  streetAddress String   @unique @map("street_address")
  city          String
  state         String
  postalCode    String   @map("postal_code")
  county        String?
  latitude      Decimal?
  longitude     Decimal?
  description   String?
  imageUrl      String?  @map("image_url")

  propertyDetail PropertyDetail?

  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id])

  evaluations Evaluation[]

  @@map("properties")
}

model PropertyDetail {
  id String @id @default(cuid())

  mlsId String? @map("mls_id")
  zpid  Int

  listPrice Decimal? @map("list_price")

  annualHoa                 Decimal? @map("annual_hoa")
  annualHomeownersInsurance Decimal? @map("annual_homeowners_insurance")
  annualPropertyTaxes       Decimal? @map("annual_property_taxes")
  propertyTaxRate           Decimal? @map("property_tax_rate")

  beds          Int?
  baths         Decimal?
  garage        Int?
  squareFootage Decimal? @map("square_footage")
  yearBuilt     Int?     @map("year_built")

  propertyId String   @unique @map("property_id")
  property   Property @relation(fields: [propertyId], references: [id])

  @@map("property_details")
}

model Evaluation {
  id String @id @default(cuid())

  investmentDeal        InvestmentDeal?
  conventionalFinancing ConventionalFinancing?
  hardMoneyFinancing    HardMoneyFinancing?

  propertyId String
  property   Property @relation(fields: [propertyId], references: [id])
}

model InvestmentDeal {
  id String @id @default(cuid())

  estimatedSalePrice Decimal @default(0) @map("estimated_sale_price")
  sellerContribution Decimal @default(0) @map("seller_contribution")
  repairs            Decimal @default(0)
  insurance          Decimal @default(0)
  rent               Decimal @default(0)
  hardAppraisedPrice Decimal @default(0) @map("hard_appraised_price")
  survey             Decimal @default(0)
  hoa                Decimal @default(0)
  inspection         Decimal @default(0)
  maxRefiCashback    Decimal @default(0) @map("max_refi_cashback")
  purchasePrice      Decimal @default(0) @map("purchase_price")
  appraisal          Decimal @default(0)
  propertyTax        Decimal @default(0) @map("property_tax")
  miscellaneous      Decimal @default(0)

  evaluationId String     @unique
  evaluation   Evaluation @relation(fields: [evaluationId], references: [id])
}

model ConventionalFinancing {
  id String @id @default(cuid())

  downPayment       Decimal @default(20) @map("down_payment")
  loanTerm          Int     @default(30) @map("loan_term")
  interestRate      Decimal @default(5) @map("interest_rate")
  lenderFees        Decimal @default(6000) @map("lender_fees")
  mortgageInsurance Decimal @default(0) @map("mortgage_insurance")
  monthsOfTaxes     Int     @default(0) @map("months_of_taxes")

  evaluationId String     @unique
  evaluation   Evaluation @relation(fields: [evaluationId], references: [id])
}

model HardMoneyFinancing {
  id String @id @default(cuid())

  hardLoanToValue      Decimal @default(70) @map("hard_loan_to_value")
  hardLenderFees       Decimal @default(10000) @map("hard_lender_fees")
  hardInterestRate     Decimal @default(14) @map("hard_interest_rate")
  hardMonthsToRefi     Int     @default(3) @map("hard_months_to_refi")
  hardRollInLenderFees Boolean @default(true) @map("hard_roll_in_lender_fees")
  hardWeeksUntilLeased Int     @default(8) @map("hard_weeks_until_leased")

  refiLoanToValue       Decimal @default(75) @map("refi_loan_to_value")
  refiLoanTerm          Int     @default(30) @map("refi_loan_term")
  refiInterestRate      Decimal @default(5) @map("refi_interest_rate")
  refiLenderFees        Decimal @default(5000) @map("refi_lender_fees")
  refiMonthsOfTaxes     Int     @default(2) @map("refi_months_of_taxes")
  refiMortgageInsurance Decimal @default(0) @map("refi_mortgage_insurance")

  evaluationId String     @unique
  evaluation   Evaluation @relation(fields: [evaluationId], references: [id])
}
